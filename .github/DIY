cp ./cfg/Custom_Clash.ini ./
file="Custom_Clash.ini"
mainland_file="Custom_Clash_Mainland.ini"

# 在首行插入注释
sed -i '1i;https://raw.githubusercontent.com/superpassby/Custom_OpenClash_Rules/refs/heads/main/Custom_Clash.ini' ./Custom_Clash.ini

# 在 [custom] 下一行插入两行规则
sed -i '/^\[custom\]/a ruleset=🎯 自定义直连,https://raw.githubusercontent.com/superpassby/Custom_OpenClash_Rules/refs/heads/main/.github/MyRule/Direct.list,28800' ./Custom_Clash.ini
sed -i '/^\[custom\]/a ruleset=✈️ 自定义代理,https://raw.githubusercontent.com/superpassby/Custom_OpenClash_Rules/refs/heads/main/.github/MyRule/Proxy.list,28800' ./Custom_Clash.ini

# 替换指定的 Speedtest.list 地址
sed -i 's|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.list|https://raw.githubusercontent.com/superpassby/Custom_OpenClash_Rules/refs/heads/main/.github/MyRule/Speedtest.list|' ./Custom_Clash.ini

# 自定义节点
sed -i '/^custom_proxy_group=.*手动选择`select/ s/`\[\]♻️ 自动选择/`\[\]♻️ 自动选择`\[\]🎯 全球直连`\[\]☁️ CF节点`\[\]🇧🇲 百慕达节点/' ./Custom_Clash.ini
sed -i 's|^\(custom_proxy_group=♻️ 自动选择`url-test`\).*\(`https://www.gstatic.com/generate_204`300,,50\)$|\1[]🇭🇰 香港节点`[]🇺🇸 美国节点`[]🇯🇵 日本节点`[]🇸🇬 新加坡节点`[]🇼🇸 台湾节点`[]🇰🇷 韩国节点\2|' ./Custom_Clash.ini


sed -i '/custom_proxy_group.*土耳其节点`url-test`/a custom_proxy_group=🇧🇲 百慕达节点`url-test`(百慕达|BM)`http://91.108.56.138`300,,50' ./Custom_Clash.ini
sed -i '/custom_proxy_group.*土耳其节点`url-test`/a custom_proxy_group=☁️ CF节点`url-test`(Cloudflare|CF)`http://91.108.56.138`300,,50' ./Custom_Clash.ini

sed -i '/custom_proxy_group.*其他地区/s/港|/百慕达|BM|港|Cloudflare|CF|/' ./Custom_Clash.ini
sed -i '/^custom_proxy_group=.*即时通讯`select/ s/`\[\]♻️ 自动选择/`\[\]♻️ 自动选择`\[\]🎯 全球直连`\[\]☁️ CF节点`\[\]🇧🇲 百慕达节点/' ./Custom_Clash.ini


# sed -i '/^custom_proxy_group=🇨🇦 加拿大节点\|^custom_proxy_group=🇬🇧 英国节点\|^custom_proxy_group=🇫🇷 法国节点\|^custom_proxy_group=🇩🇪 德国节点\|^custom_proxy_group=🇳🇱 荷兰节点\|^custom_proxy_group=🇹🇷 土耳其节点/ s/^/;/' ./Custom_Clash.ini



# 增加 自定义代理、自定义直连 列表
speedtest_line=$(grep -E 'custom_proxy_group.*测速工具' "$file")
[ -z "$speedtest_line" ] && { echo "未找到测速工具行"; exit 1; }

#custom_line="${speedtest_line//测速工具/自定义代理}"
custom_line=$(echo "$speedtest_line" | sed 's/=.*测速工具/=🎯 自定义直连/')
#direct_line="${speedtest_line//测速工具/自定义直连}"
direct_line=$(echo "$speedtest_line" | sed 's/=.*测速工具/=✈️ 自定义代理/')

## 直接修改文件
content=""
found=0
while IFS= read -r line; do
    content+="$line"$'\n'
    # 匹配自动选择行后，在其下方插入两行
    #if [[ "$line" =~ custom_proxy_group.*自动选择 ]]; then
    if [[ "$line" =~ custom_proxy_group.*自动选择\`url-test ]]; then
        content+="$custom_line"$'\n'
        content+="$direct_line"$'\n'
        found=1
    fi
done < "$file"

[ "$found" -eq 0 ] && { echo "未找到自动选择行"; exit 1; }

## 写入文件
echo "$content" > "$file"
echo "处理成功：在自动选择行下方添加了自定义代理和直连规则"


# 自定义顺序
processed_content=""

## 单次读取处理所有规则
while IFS= read -r line; do
    ### 处理即时通讯/社交媒体/GitHub组
    if [[ "$line" =~ custom_proxy_group.*(自定义代理|即时通讯|社交媒体|GitHub|YouTube|Netflix|DisneyPlus|HBO|PrimeVideo|AppleTV|Spotify|国外媒体|国外电商|谷歌FCM|谷歌服务|漏网之鱼) ]]; then
        if [[ "$line" =~ (\`\[\][^\`]*手动选择) ]]; then
            manual_select="${BASH_REMATCH[1]}"
            new_line="${line//$manual_select/}"
            if [[ "$new_line" =~ (.*\`select)(.*) ]]; then
                line="${BASH_REMATCH[1]}${manual_select}${BASH_REMATCH[2]}"
            fi
        fi
    ### 处理AI服务组
    elif [[ "$line" =~ custom_proxy_group.*(ChatGPT|Copilot|AI服务|TikTok) ]]; then
        if [[ "$line" =~ (\`\[\][^\`]*美国节点) ]]; then
            us_node="${BASH_REMATCH[1]}"
            new_line="${line//$us_node/}"
            if [[ "$new_line" =~ (.*\`select)(.*) ]]; then
                line="${BASH_REMATCH[1]}${us_node}${BASH_REMATCH[2]}"
            fi
        fi
    fi
    
    processed_content+="$line"$'\n'
done < "$file"

## 安全写入文件
{
    printf "%s" "$processed_content" > "$file"
    echo "处理完成，共处理了 ${#processed_content} 字节"
} || {
    echo "写入文件失败，请检查权限" >&2
    exit 1
}

# 生成 "Custom_Clash_Mainland.ini"

## 执行替换并写入新文件
sed 's|https://raw.githubusercontent.com|https://gh-proxy.com/https://raw.githubusercontent.com|g' \
    "$file" > "$mainland_file"
